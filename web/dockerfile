FROM node:20-alpine AS base

FROM base As Test
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /web
COPY package*.json ./

RUN npm ci
COPY . .
RUN npm test



FROM base As Build
WORKDIR /web

COPY --from=Test /web/node_modules ./node_modules
COPY . .

RUN npm run build



FROM base As Production
WORKDIR /web

ENV NODE_ENV production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=Build /web/public ./public

RUN mkdir .next
RUN chown nextjs:nodejs .next

COPY --from=Build --chown=nextjs:nodejs /web/.next/standalone ./
COPY --from=Build --chown=nextjs:nodejs /web/.next/static ./.next/static

USER nextjs

EXPOSE 3000

ENV PORT 3000
# set hostname to localhost
ENV HOSTNAME "0.0.0.0"

CMD ["node", "server.js"]