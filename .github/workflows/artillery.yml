name: Artillery Test

on:
  pull_request:
    branches: [main]

jobs:
  artillery_test:
    name: artillery_test
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: apps/api

      - name: Setting api .env
        run: |
          echo "SERVICE_KEY=${{ secrets.KRX_SERVICE_KEY }}" >> .env
          echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env
          echo "SUPABASE_BUCKET_NAME=${{ secrets.SUPABASE_BUCKET_NAME }}" >> .env
          echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env
          echo "TWELVE_KEY=${{ secrets.TWELVE_KEY }}" >> .env
        working-directory: apps/api

      - name: Run Artillery Test
        uses: artilleryio/action-cli@v1
        with:
          command: run apps/api/artillery/load-test.json --output apps/api/reports/report.json

      - name: Generate Artillery Report
        run: |
          mkdir -p apps/api/reports
          npx artillery report -o apps/api/reports/report.html apps/api/reports/report.json
        working-directory: apps/api

      - name: Check if report exists
        run: |
          if [ ! -f apps/api/reports/report.html ]; then
            echo "Report file not found!"
            exit 1
          fi
        working-directory: apps/api

      - name: Publish Artillery Report to PR
        id: comment
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const github = require('@actions/github');
            const context = github.context;
            const owner = context.payload.repository.owner.login;
            const repo = context.payload.repository.name;
            const prNumber = context.payload.pull_request.number;

            const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'apps/api/reports/report.html');
            const reportContent = fs.readFileSync(reportPath, 'utf8');

            github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: 'ðŸš€artillery-report: \n\n' + reportContent
            });
